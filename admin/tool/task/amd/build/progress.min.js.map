{"version":3,"file":"progress.min.js","sources":["../src/progress.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Progress script to update on the screen in the runningtasks page.\n *\n * @copyright  2023 onwards Catalyst IT {@link http://www.catalyst-eu.net/}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author     Conn Warwicker <conn.warwicker@catalyst-eu.net>\n */\n\nimport * as Ajax from 'core/ajax';\n\n/**\n * Poll a given task.\n *\n * @param {integer} id\n */\nfunction poll_task_progress(id) {\n\n    // Call AJAX request.\n    let promise = Ajax.call([{\n        methodname: 'tool_task_poll_progress', args: {'id': id}\n    }]);\n\n    // When AJAX request returns, handle the results.\n    promise[0].then(function(results) {\n\n        let data = {\n            progress: results.progress,\n            estimated: results.estimated,\n        };\n\n        // Output the progress.\n        let element = document.querySelector('#task-progress-' + results.id + ' > .progress-bar');\n        element.style.width = data.progress + '%';\n        element.setAttribute('aria-valuenow', data.progress);\n        element.innerText = data.progress + '%';\n        document.querySelector('#task-estimated-' + results.id).innerText = data.estimated;\n\n        // For now, static timeout of 5 seconds. We could look to adjust this dynamically.\n        let timeout = 5;\n\n        // If not complete, set timeout to poll again shortly.\n        if (data.progress < 100) {\n            // Poll it again in 5 seconds.\n            setTimeout(() => poll_task_progress(results.id), timeout * 1000);\n        }\n\n    });\n\n}\n\n/**\n * Initialise the polling process.\n */\nexport const init = () => {\n\n    // Find any running tasks which support a progress bar.\n    document.querySelectorAll('.task-progress').forEach(el => {\n\n        let id = el.getAttribute('attr-id');\n        poll_task_progress(id);\n\n    });\n\n};"],"names":["poll_task_progress","id","Ajax","call","methodname","args","then","results","data","progress","estimated","element","document","querySelector","style","width","setAttribute","innerText","setTimeout","timeout","querySelectorAll","forEach","el","getAttribute"],"mappings":";;;;;;;;SA8BSA,mBAAmBC,IAGVC,KAAKC,KAAK,CAAC,CACrBC,WAAY,0BAA2BC,KAAM,IAAOJ,OAIhD,GAAGK,MAAK,SAASC,aAEjBC,KAAO,CACPC,SAAUF,QAAQE,SAClBC,UAAWH,QAAQG,WAInBC,QAAUC,SAASC,cAAc,kBAAoBN,QAAQN,GAAK,oBACtEU,QAAQG,MAAMC,MAAQP,KAAKC,SAAW,IACtCE,QAAQK,aAAa,gBAAiBR,KAAKC,UAC3CE,QAAQM,UAAYT,KAAKC,SAAW,IACpCG,SAASC,cAAc,mBAAqBN,QAAQN,IAAIgB,UAAYT,KAAKE,UAMrEF,KAAKC,SAAW,KAEhBS,YAAW,IAAMlB,mBAAmBO,QAAQN,KAAKkB,2vBAUzC,KAGhBP,SAASQ,iBAAiB,kBAAkBC,SAAQC,KAGhDtB,mBADSsB,GAAGC,aAAa"}